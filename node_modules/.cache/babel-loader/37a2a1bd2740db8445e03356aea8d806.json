{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Escritorio/Weather-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    let filterCity = cities.filter(c => c.name.toLowerCase() === ciudad.toLowerCase());\n\n    if (filterCity[0]) {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Do you want to continue',\n        icon: 'error',\n        confirmButtonText: 'Cool'\n      });\n    } else {\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n    }\n  } // function onFilter(ciudadId) {\n  //   let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n  //   if (ciudad.length > 0) {\n  //     return ciudad[0];\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Cards","SearchBar","Swal","apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","filterCity","name","toLowerCase","fire","title","text","icon","confirmButtonText","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","wind","speed","temp","clouds","all","latitud","coord","lat","longitud","lon","alert"],"sources":["/home/jonathan/Escritorio/Weather-App/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport Swal from 'sweetalert2'\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    let filterCity = cities.filter(c => c.name.toLowerCase() === ciudad.toLowerCase())\n    if (filterCity[0]) {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Do you want to continue',\n        icon: 'error',\n        confirmButtonText: 'Cool'\n      });\n    }\n    else {\n\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n        .then(r => r.json())\n        .then((recurso) => {\n          if (recurso.main !== undefined) {\n            const ciudad = {\n              min: Math.round(recurso.main.temp_min),\n              max: Math.round(recurso.main.temp_max),\n              img: recurso.weather[0].icon,\n              id: recurso.id,\n              wind: recurso.wind.speed,\n              temp: recurso.main.temp,\n              name: recurso.name,\n              weather: recurso.weather[0].main,\n              clouds: recurso.clouds.all,\n              latitud: recurso.coord.lat,\n              longitud: recurso.coord.lon\n            };\n            setCities(oldCities => [...oldCities, ciudad]);\n          } else {\n            alert(\"Ciudad no encontrada\");\n          }\n        });\n    }\n  }\n\n  // function onFilter(ciudadId) {\n  //   let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n  //   if (ciudad.length > 0) {\n  //     return ciudad[0];\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n\n      <Route path='/'>\n        <SearchBar onSearch={onSearch} />\n      </Route>\n\n      <Route exact path='/'>\n        <Cards\n          cities={cities}\n          onClose={onClose}\n        />\n      </Route>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}